{"version":3,"file":"types.js","sourceRoot":"","sources":["../../src/types.ts"],"names":[],"mappings":"","sourcesContent":["export type TshyConfig = {\n  exports?: Record<string, TshyExport>\n  dialects?: Dialect[]\n}\n\nexport type Dialect = 'commonjs' | 'esm'\n\nexport type ExportDetail = {\n  default: string\n  [k: string]: string\n}\n\nexport type TshyExport =\n  | string\n  | ({ types?: string; import?: string; require?: string } & (\n      | { import: string }\n      | { require: string }\n    ))\n  | ({\n      types?: string\n      import?: ExportDetail\n      require?: ExportDetail\n    } & ({ import: ExportDetail } | { require: ExportDetail }))\n\nexport type Package = {\n  name: string\n  version: string\n  type?: 'module'\n  bin?: string | Record<string, string>\n  exports?: Record<string, Export>\n  tshy?: TshyConfig\n  imports?: Record<string, any>\n  [k: string]: any\n}\n\n// VERY limited subset of the datatypes \"exports\" can be\n// but we're only writing our flavor, so it's fine.\nexport type Export =\n  | string\n  | {\n      import?: Export\n      require?: Export\n      types?: Export\n      default?: Export\n    }\n  | {\n      import?:\n        | string\n        | {\n            types: string\n            default: string\n          }\n      require?:\n        | string\n        | {\n            types: string\n            default: string\n          }\n    }\n"]}